/*!
    @page enet_loopback_s32k148_group ENET Loopback
    @brief Example application using the ENET driver

    ## Application description ##
    ______
    The purpose of this demo application is to show you how to use the ENET module from the S32K148 CPU using the S32 SDK API.
    The example continuously sends frames in loopback. Prior to sending a frame, the LED will be red. If the frame is
    successfully received, the LED will be green.

    ## Prerequisites ##
    ______
    The run the example you will need to have the following items:
    - 1 S32K148 board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 Jlink Lite Debugger (optional, users can use Open SDA)

    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - S32K148EVB-Q144
    - S32K148-MB

    ## How to run ##
    ______

    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b enet_loopback_s32k148. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b enet_loopback_s32k148). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be four debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b enet_loopback_s32k148 \b Debug_RAM \b Jlink | Debug the RAM configuration using Segger Jlink debuggers
     \b enet_loopback_s32k148 \b Debug_FLASH \b Jlink | Debug the FLASH configuration using Segger Jlink debuggers
     \b enet_loopback_s32k148 \b Debug_RAM \b PEMicro | Debug the RAM configuration using PEMicro debuggers
     \b enet_loopback_s32k148 \b Debug_FLASH \b PEMicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
*/

