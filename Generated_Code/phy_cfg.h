/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : phy_cfg.h
**     Project     : MDIO_Enet_S32K148
**     Processor   : S32K148_144
**     Component   : phy
**     Version     : Component SDK_S32K14x_09, Driver 01.00, CPU db: 3.00.000
**     Repository  : SDK_S32K14x_09
**     Compiler    : GNU C Compiler
**     Date/Time   : 2020-09-08, 16:32, # CodeGen: 0
**     Contents    :
**         PHY_FrameworkInit    - phy_status_t PHY_FrameworkInit(phy_config_t * phyConfig,phy_driver_t **...
**         PHY_Init             - phy_status_t PHY_Init(uint8_t phy);
**         PHY_Reset            - phy_status_t PHY_Reset(uint8_t phy);
**         PHY_MainFunction     - phy_status_t PHY_MainFunction(uint8_t phy);
**         PHY_GetId            - phy_status_t PHY_GetId(uint8_t phy,phy_id_t * id);
**         PHY_GetLinkStatus    - phy_status_t PHY_GetLinkStatus(uint8_t phy,bool * linkUp);
**         PHY_GetLinkSpeed     - phy_status_t PHY_GetLinkSpeed(uint8_t phy,phy_speed_t * speed);
**         PHY_Suspend          - phy_status_t PHY_Suspend(uint8_t phy);
**         PHY_Resume           - phy_status_t PHY_Resume(uint8_t phy);
**         PHY_Sleep            - phy_status_t PHY_Sleep(uint8_t phy);
**         PHY_Wakeup           - phy_status_t PHY_Wakeup(uint8_t phy);
**         PHY_SetRole          - phy_status_t PHY_SetRole(uint8_t phy,phy_role_t role);
**         PHY_SetLoopback      - phy_status_t PHY_SetLoopback(uint8_t phy,phy_loopback_t loopbackMode);
**         PHY_EnableInterrupts - phy_status_t PHY_EnableInterrupts(uint8_t phy);
**         PHY_HandleInterrupt  - phy_status_t PHY_HandleInterrupt(uint8_t phy);
**         PHY_EnableAutoneg    - phy_status_t PHY_EnableAutoneg(uint8_t phy);
**         PHY_DisableAutoneg   - phy_status_t PHY_DisableAutoneg(uint8_t phy);
**         PHY_RestartAutoneg   - phy_status_t PHY_RestartAutoneg(uint8_t phy);
**         PHY_Write            - phy_status_t PHY_Write(uint8_t phy,uint8_t registerAddr,uint16_t value);
**         PHY_Read             - phy_status_t PHY_Read(uint8_t phy,uint8_t registerAddr,uint16_t * value);
**         PHY_RMR              - phy_status_t PHY_RMR(uint8_t phy,uint8_t registerAddr,uint16_t value,uint16_t...
**
**     Copyright 1997 - 2015 Freescale Semiconductor, Inc.
**     Copyright 2016-2017 NXP
**     All Rights Reserved.
**     
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
** ###################################################################*/
/*!
** @file phy_cfg.h
** @version 01.00
*/
/*!
**  @addtogroup phy_cfg_module phy_cfg module documentation
**  @{
*/
#ifndef PHY_CFG_H
#define PHY_CFG_H

/* MODULE phy1. */

/* Include inherited beans */
#include "ethernet1.h"
#include "Cpu.h"

/*! @brief Number of PHY devices */
#define N_PHY_DEVS (1U)
/*! @brief Number of PHY drivers */
#define N_PHY_DRIVERS (1U)

extern phy_config_t  phyConfig[N_PHY_DEVS];      /*! @brief Array of PHY configuration structures */
extern phy_driver_t* phyDrivers[N_PHY_DRIVERS];  /*! @brief Array of pointers towards the driver structures */

/*! @brief PHY 0 callbacks */
void link_up(uint8_t phy);
void link_down(uint8_t phy);


#endif
/* ifndef PHY_CFG_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.1 [05.21]
**     for the Freescale S32K series of microcontrollers.
**
** ###################################################################
*/

